@model ShadowWizardMath.Models.Level

<!DOCTYPE html>
<html>
<head>
    <title>Level View</title>
    <link rel="stylesheet" href="/css/site.css" />

    @*import JQuery*@
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

</head>
<body>
    <!-- Game container -->
    <div id="game-container">
        <!-- Frame container -->
        <div id="frame-container">
            <div class="background-layer" style="background-image: url('/art/Backgrounds/Regular%20Background/MainBackgroundFrame.png')"></div>
            <div id="main-frame"></div>
        </div>
        <!-- This pulls the level from the controller 'level.Stage = 1;' -->
        <h1>Level @Model.Stage</h1>

        <!-- This declares the file name of the background image which is set by the stage. -->
        @if (Model.Stage == 1)
        {
            <div class="background-layer" style="background-image: url('/art/Backgrounds/Regular%20Background/Backgroundrunner.png')"></div>
        }
        <!-- Displaying player information -->
        <h2>Player:</h2>
        <img id="character-image" src="~/art/Shadow%20Wizard%20Player/Shadow-wizard-armed-idle.gif" alt="Character">
        <div class="player-info">
            <div class="player-details">
                <p>@Model.Player.PlayerName</p>
                <p>Coins: <span id="playerCoins">0</span></p>
            </div>
        </div>
        @{
            var mathProblems = new MathProblems();
            mathProblems.GenerateMathProblem(out int operand1, out int operand2, out string operatorString, out int correctAnswer);

            // Generate two incorrect answers
            int incorrectAnswer1 = correctAnswer + 1;
            int incorrectAnswer2 = correctAnswer - 1;
        }

        <h2>Prompt</h2>
        <div class="prompt">
            <img id="prompt-image" src="~/art/Backgrounds/Regular%20Background/Enemyaskquestion.png" alt="prompt" />
            <div class="prompt-text">
            <p>@operand1 @operatorString @operand2 = ?</p>
            </div>
        </div>
        @{
            var answerOptions = new List<int> { correctAnswer, incorrectAnswer1, incorrectAnswer2 };
            var shuffledOptions = Shuffle(answerOptions);

            // C# method for shuffling the answer options
            List<int> Shuffle(List<int> list)
            {
                var random = new Random();
                int n = list.Count;
                while (n > 1)
                {
                    n--;
                    int k = random.Next(n + 1);
                    int value = list[k];
                    list[k] = list[n];
                    list[n] = value;
                }
                return list;
            }
        }
        <!-- Answer boxes -->
    <div class="answerbox1">
        <img id="prompt-image" src="~/art/Backgrounds/Regular%20Background/Question-Answer-Box.png" alt="answerbox1" />
         <p class="answerbox1-text">@shuffledOptions[0]</p>
    </div>
    </div>
    <div class="answerbox2">
        <img id="prompt-image" src="~/art/Backgrounds/Regular%20Background/Question-Answer-Box.png" alt="answerbox2" />
        <p class="answerbox2-text">@shuffledOptions[1]</p>
    </div>
    <div class="answerbox3">
        <img id="prompt-image" src="~/art/Backgrounds/Regular%20Background/Question-Answer-Box.png" alt="answerbox3" />
        <p class="answerbox3-text">@shuffledOptions[2]</p>
    </div>


        <!-- Displaying enemies information -->
        <h2>Enemies:</h2>
        <!-- Displaying the sprite for the first enemy on top of other elements -->
        @if (ViewBag.levelEnemies.Count > 0)
        {
            var firstEnemy = ViewBag.levelEnemies[0];
            <img id="first-enemy" src="@firstEnemy.sprite" alt="Enemy">
        }


        <!-- Next Stage button -->
        <button id="nextStageButton">Next Stage</button>


    <script>
        var enemyData = @Html.Raw(Json.Serialize(ViewBag.levelEnemies));
    </script>
    <script>
        var coins = 0;
        var currentEnemyIndex = 0;

        $(document).ready(function () {
            // Function to check the selected answer
            function checkAnswer(selectedAnswer) {
                // Compare the selected answer with the correct answer
                if (selectedAnswer === @correctAnswer) {
                    alert("Correct!");
                    coins += 10;
                } else {
                    alert("Incorrect!");
                    coins -= 5;
                }
                $("#playerCoins").text(coins);
            }


            // Click event handler for the answer boxes
            $(".answerbox1 img, .answerbox2 img, .answerbox3 img").click(function () {
                var selectedAnswer = $(this).siblings("p").text(); // Get the answer text from the sibling paragraph
                checkAnswer(parseInt(selectedAnswer));
            });


        });


            // JavaScript/jQuery code for cycling through different backgrounds on button click
            $(document).ready(function () {
                var backgrounds = [
                    "/art/Backgrounds/Regular%20Background/Backgroundrunner.png",
                    "/art/Backgrounds/Black%20Background/Black-Backgroundrunner.png",
                    "/art/Backgrounds/Blue%20Background/Blue-Backgroundrunner.png",
                    "/art/Backgrounds/Green%20Background/Green-Backgroundrunner.png",
                    "/art/Backgrounds/Purple%20Background/Purple-Backgroundrunner.png",
                    "/art/Backgrounds/Red%20Background/Red-Backgroundrunner.png",
                ];

                var currentIndex = 0;

                $("#nextStageButton").click(function () {
                    currentIndex++;
                    if (currentIndex >= backgrounds.length) {
                        currentIndex = 0;
                    }

                    $(".background-layer").css("background-image", "url(" + backgrounds[currentIndex] + ")");
                });
            });
        </script>
</body>
</html>